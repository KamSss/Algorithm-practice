/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode *getIntersectionNode(struct ListNode *headA, struct ListNode *headB) {
    if(headA == NULL && headB == NULL){
        return NULL;
    }
    struct ListNode* cur1 = headA;
    struct ListNode* cur2 = headB;
    int sumA = 0;
    int sunB = 0;
    
    //拿到两个字符串的长度
    while(cur1 != NULL){
        cur1 = cur1->next;
        sumA++;
    }
    while(cur2 != NULL){
        cur2 = cur2->next;
        sumB++;
    }
    
    //sumA放两个长度的差值
    //cur1总是放长度最长的链表
    if(sumA > sumB){
        sumA = sumA - sumB;
        cur1 = headA;
        cur2 = headB;
    }
    else{
        sumA = sumB - sumA;
        cur1 = headB;
        cur2 = headA;
    }
    while(sum--){
        cur1 = cur1->next;
    }

}