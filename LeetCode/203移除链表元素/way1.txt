//方法：
//1.cur走前面，prev走后面
//2.while（cur的val相等时，prev的next指向cur的next)
//3.我们默认从第二个节点开始判断的，在最后判断一下头节点

class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if(head == NULL){
            return NULL;
        }
        ListNode* cur = head->next;
        ListNode* prev = head;
        while(cur != NULL){
            while(cur != NULL && cur->val == val){
                prev->next = cur->next;
                cur = cur->next;
            }
            prev = prev->next;
            if(prev == NULL)
                break;
            cur = prev->next;
        }
        if(head->val == val){
            return head->next;
        }
        return head;
    }
};