/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    struct ListNode* head = (struct ListNode *)malloc(sizeof(struct ListNode));
    struct ListNode* end = head;
    struct ListNode* cur3 = head;
    struct ListNode* cur1 = l1;
    struct ListNode* cur2 = l2;
    int carry = 0;
    
    while(cur1 != NULL || cur2 != NULL){
        int a=cur1?cur1->val:0;
        int b=cur2?cur2->val:0;
        int sum = a + b + carry;
        
        cur3 = (struct ListNode *)malloc(sizeof(struct ListNode));
        end->val = sum%10;
        carry = sum/10;
        
        cur1 = cur1?cur1->next:NULL;
        cur2 = cur2?cur2->next:NULL;
        
        if(cur1 == NULL && cur2 == NULL && carry != 0){
            end->next = cur3;
            end = cur3;
            cur3 = (struct ListNode *)malloc(sizeof(struct ListNode));
            end->val = carry;
            end->next = NULL;
            end = cur3;
            break;
        }
        if(cur1 == NULL && cur2 == NULL && carry == 0){
            end->next = NULL;
            end = cur3;
            break;
        }
        end->next = cur3;
        end = cur3;
    }
    return head;
}